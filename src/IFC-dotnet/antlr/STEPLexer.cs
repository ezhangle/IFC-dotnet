//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from STEP.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace STEP {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public partial class STEPLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, Digit=7, Digits=8, Letter=9, 
		CapitalLetter=10, ENDSEC=11, FILE_DESCRIPTION=12, FILE_NAME=13, FILE_SCHEMA=14, 
		HEADER=15, Id=16, ISO=17, ISO_END=18, StringLiteral=19, TypeRef=20, Undefined=21, 
		NewlineChar=22, WS=23, Comments=24;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "Digit", "Digits", "Letter", 
		"CapitalLetter", "ENDSEC", "FILE_DESCRIPTION", "FILE_NAME", "FILE_SCHEMA", 
		"HEADER", "Id", "ISO", "ISO_END", "StringLiteral", "TypeRef", "Undefined", 
		"NewlineChar", "WS", "Comments"
	};


	public STEPLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public STEPLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'('", "','", "')'", "';'", "'='", "'''", null, null, null, null, 
		"'ENDSEC'", "'FILE_DESCRIPTION'", "'FILE_NAME'", "'FILE_SCHEMA'", "'HEADER'", 
		null, null, null, null, null, "'$'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, "Digit", "Digits", "Letter", 
		"CapitalLetter", "ENDSEC", "FILE_DESCRIPTION", "FILE_NAME", "FILE_SCHEMA", 
		"HEADER", "Id", "ISO", "ISO_END", "StringLiteral", "TypeRef", "Undefined", 
		"NewlineChar", "WS", "Comments"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "STEP.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static STEPLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x1A', '\xCA', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\b', 
		'\x3', '\b', '\x3', '\t', '\x3', '\t', '\a', '\t', '\x44', '\n', '\t', 
		'\f', '\t', '\xE', '\t', 'G', '\v', '\t', '\x3', '\n', '\x3', '\n', '\x3', 
		'\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', 
		'\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', 
		'\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', 
		'\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', 
		'\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', 
		'\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', 
		'\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xF', '\x3', '\xF', 
		'\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', 
		'\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', 
		'\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', 
		'\x3', '\x10', '\x3', '\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', 
		'\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', 
		'\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', 
		'\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', 
		'\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', 
		'\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x14', 
		'\x3', '\x14', '\a', '\x14', '\x9F', '\n', '\x14', '\f', '\x14', '\xE', 
		'\x14', '\xA2', '\v', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x15', 
		'\x3', '\x15', '\a', '\x15', '\xA8', '\n', '\x15', '\f', '\x15', '\xE', 
		'\x15', '\xAB', '\v', '\x15', '\x3', '\x16', '\x3', '\x16', '\x3', '\x17', 
		'\x6', '\x17', '\xB0', '\n', '\x17', '\r', '\x17', '\xE', '\x17', '\xB1', 
		'\x3', '\x17', '\x3', '\x17', '\x3', '\x18', '\x6', '\x18', '\xB7', '\n', 
		'\x18', '\r', '\x18', '\xE', '\x18', '\xB8', '\x3', '\x18', '\x3', '\x18', 
		'\x3', '\x19', '\x3', '\x19', '\x3', '\x19', '\x3', '\x19', '\a', '\x19', 
		'\xC1', '\n', '\x19', '\f', '\x19', '\xE', '\x19', '\xC4', '\v', '\x19', 
		'\x3', '\x19', '\x3', '\x19', '\x3', '\x19', '\x3', '\x19', '\x3', '\x19', 
		'\x3', '\xC2', '\x2', '\x1A', '\x3', '\x3', '\x5', '\x4', '\a', '\x5', 
		'\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', '\x11', '\n', '\x13', 
		'\v', '\x15', '\f', '\x17', '\r', '\x19', '\xE', '\x1B', '\xF', '\x1D', 
		'\x10', '\x1F', '\x11', '!', '\x12', '#', '\x13', '%', '\x14', '\'', '\x15', 
		')', '\x16', '+', '\x17', '-', '\x18', '/', '\x19', '\x31', '\x1A', '\x3', 
		'\x2', '\a', '\x3', '\x2', '\x32', ';', '\x4', '\x2', '\x43', '\\', '\x63', 
		'|', '\x3', '\x2', '\x43', '\\', '\x4', '\x2', '\f', '\f', '\xE', '\xF', 
		'\x5', '\x2', '\v', '\f', '\xE', '\xF', '\"', '\"', '\x2', '\xCF', '\x2', 
		'\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', '\r', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '%', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\'', '\x3', '\x2', '\x2', '\x2', '\x2', ')', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '+', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'-', '\x3', '\x2', '\x2', '\x2', '\x2', '/', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x31', '\x3', '\x2', '\x2', '\x2', '\x3', '\x33', '\x3', '\x2', 
		'\x2', '\x2', '\x5', '\x35', '\x3', '\x2', '\x2', '\x2', '\a', '\x37', 
		'\x3', '\x2', '\x2', '\x2', '\t', '\x39', '\x3', '\x2', '\x2', '\x2', 
		'\v', ';', '\x3', '\x2', '\x2', '\x2', '\r', '=', '\x3', '\x2', '\x2', 
		'\x2', '\xF', '?', '\x3', '\x2', '\x2', '\x2', '\x11', '\x41', '\x3', 
		'\x2', '\x2', '\x2', '\x13', 'H', '\x3', '\x2', '\x2', '\x2', '\x15', 
		'J', '\x3', '\x2', '\x2', '\x2', '\x17', 'L', '\x3', '\x2', '\x2', '\x2', 
		'\x19', 'S', '\x3', '\x2', '\x2', '\x2', '\x1B', '\x64', '\x3', '\x2', 
		'\x2', '\x2', '\x1D', 'n', '\x3', '\x2', '\x2', '\x2', '\x1F', 'z', '\x3', 
		'\x2', '\x2', '\x2', '!', '\x81', '\x3', '\x2', '\x2', '\x2', '#', '\x84', 
		'\x3', '\x2', '\x2', '\x2', '%', '\x8E', '\x3', '\x2', '\x2', '\x2', '\'', 
		'\x9C', '\x3', '\x2', '\x2', '\x2', ')', '\xA5', '\x3', '\x2', '\x2', 
		'\x2', '+', '\xAC', '\x3', '\x2', '\x2', '\x2', '-', '\xAF', '\x3', '\x2', 
		'\x2', '\x2', '/', '\xB6', '\x3', '\x2', '\x2', '\x2', '\x31', '\xBC', 
		'\x3', '\x2', '\x2', '\x2', '\x33', '\x34', '\a', '*', '\x2', '\x2', '\x34', 
		'\x4', '\x3', '\x2', '\x2', '\x2', '\x35', '\x36', '\a', '.', '\x2', '\x2', 
		'\x36', '\x6', '\x3', '\x2', '\x2', '\x2', '\x37', '\x38', '\a', '+', 
		'\x2', '\x2', '\x38', '\b', '\x3', '\x2', '\x2', '\x2', '\x39', ':', '\a', 
		'=', '\x2', '\x2', ':', '\n', '\x3', '\x2', '\x2', '\x2', ';', '<', '\a', 
		'?', '\x2', '\x2', '<', '\f', '\x3', '\x2', '\x2', '\x2', '=', '>', '\a', 
		')', '\x2', '\x2', '>', '\xE', '\x3', '\x2', '\x2', '\x2', '?', '@', '\t', 
		'\x2', '\x2', '\x2', '@', '\x10', '\x3', '\x2', '\x2', '\x2', '\x41', 
		'\x45', '\x5', '\xF', '\b', '\x2', '\x42', '\x44', '\x5', '\xF', '\b', 
		'\x2', '\x43', '\x42', '\x3', '\x2', '\x2', '\x2', '\x44', 'G', '\x3', 
		'\x2', '\x2', '\x2', '\x45', '\x43', '\x3', '\x2', '\x2', '\x2', '\x45', 
		'\x46', '\x3', '\x2', '\x2', '\x2', '\x46', '\x12', '\x3', '\x2', '\x2', 
		'\x2', 'G', '\x45', '\x3', '\x2', '\x2', '\x2', 'H', 'I', '\t', '\x3', 
		'\x2', '\x2', 'I', '\x14', '\x3', '\x2', '\x2', '\x2', 'J', 'K', '\t', 
		'\x4', '\x2', '\x2', 'K', '\x16', '\x3', '\x2', '\x2', '\x2', 'L', 'M', 
		'\a', 'G', '\x2', '\x2', 'M', 'N', '\a', 'P', '\x2', '\x2', 'N', 'O', 
		'\a', '\x46', '\x2', '\x2', 'O', 'P', '\a', 'U', '\x2', '\x2', 'P', 'Q', 
		'\a', 'G', '\x2', '\x2', 'Q', 'R', '\a', '\x45', '\x2', '\x2', 'R', '\x18', 
		'\x3', '\x2', '\x2', '\x2', 'S', 'T', '\a', 'H', '\x2', '\x2', 'T', 'U', 
		'\a', 'K', '\x2', '\x2', 'U', 'V', '\a', 'N', '\x2', '\x2', 'V', 'W', 
		'\a', 'G', '\x2', '\x2', 'W', 'X', '\a', '\x61', '\x2', '\x2', 'X', 'Y', 
		'\a', '\x46', '\x2', '\x2', 'Y', 'Z', '\a', 'G', '\x2', '\x2', 'Z', '[', 
		'\a', 'U', '\x2', '\x2', '[', '\\', '\a', '\x45', '\x2', '\x2', '\\', 
		']', '\a', 'T', '\x2', '\x2', ']', '^', '\a', 'K', '\x2', '\x2', '^', 
		'_', '\a', 'R', '\x2', '\x2', '_', '`', '\a', 'V', '\x2', '\x2', '`', 
		'\x61', '\a', 'K', '\x2', '\x2', '\x61', '\x62', '\a', 'Q', '\x2', '\x2', 
		'\x62', '\x63', '\a', 'P', '\x2', '\x2', '\x63', '\x1A', '\x3', '\x2', 
		'\x2', '\x2', '\x64', '\x65', '\a', 'H', '\x2', '\x2', '\x65', '\x66', 
		'\a', 'K', '\x2', '\x2', '\x66', 'g', '\a', 'N', '\x2', '\x2', 'g', 'h', 
		'\a', 'G', '\x2', '\x2', 'h', 'i', '\a', '\x61', '\x2', '\x2', 'i', 'j', 
		'\a', 'P', '\x2', '\x2', 'j', 'k', '\a', '\x43', '\x2', '\x2', 'k', 'l', 
		'\a', 'O', '\x2', '\x2', 'l', 'm', '\a', 'G', '\x2', '\x2', 'm', '\x1C', 
		'\x3', '\x2', '\x2', '\x2', 'n', 'o', '\a', 'H', '\x2', '\x2', 'o', 'p', 
		'\a', 'K', '\x2', '\x2', 'p', 'q', '\a', 'N', '\x2', '\x2', 'q', 'r', 
		'\a', 'G', '\x2', '\x2', 'r', 's', '\a', '\x61', '\x2', '\x2', 's', 't', 
		'\a', 'U', '\x2', '\x2', 't', 'u', '\a', '\x45', '\x2', '\x2', 'u', 'v', 
		'\a', 'J', '\x2', '\x2', 'v', 'w', '\a', 'G', '\x2', '\x2', 'w', 'x', 
		'\a', 'O', '\x2', '\x2', 'x', 'y', '\a', '\x43', '\x2', '\x2', 'y', '\x1E', 
		'\x3', '\x2', '\x2', '\x2', 'z', '{', '\a', 'J', '\x2', '\x2', '{', '|', 
		'\a', 'G', '\x2', '\x2', '|', '}', '\a', '\x43', '\x2', '\x2', '}', '~', 
		'\a', '\x46', '\x2', '\x2', '~', '\x7F', '\a', 'G', '\x2', '\x2', '\x7F', 
		'\x80', '\a', 'T', '\x2', '\x2', '\x80', ' ', '\x3', '\x2', '\x2', '\x2', 
		'\x81', '\x82', '\a', '%', '\x2', '\x2', '\x82', '\x83', '\x5', '\x11', 
		'\t', '\x2', '\x83', '\"', '\x3', '\x2', '\x2', '\x2', '\x84', '\x85', 
		'\a', 'K', '\x2', '\x2', '\x85', '\x86', '\a', 'U', '\x2', '\x2', '\x86', 
		'\x87', '\a', 'Q', '\x2', '\x2', '\x87', '\x88', '\x3', '\x2', '\x2', 
		'\x2', '\x88', '\x89', '\a', '/', '\x2', '\x2', '\x89', '\x8A', '\x5', 
		'\x11', '\t', '\x2', '\x8A', '\x8B', '\a', '/', '\x2', '\x2', '\x8B', 
		'\x8C', '\x5', '\x11', '\t', '\x2', '\x8C', '\x8D', '\a', '=', '\x2', 
		'\x2', '\x8D', '$', '\x3', '\x2', '\x2', '\x2', '\x8E', '\x8F', '\a', 
		'G', '\x2', '\x2', '\x8F', '\x90', '\a', 'P', '\x2', '\x2', '\x90', '\x91', 
		'\a', '\x46', '\x2', '\x2', '\x91', '\x92', '\a', '/', '\x2', '\x2', '\x92', 
		'\x93', '\a', 'K', '\x2', '\x2', '\x93', '\x94', '\a', 'U', '\x2', '\x2', 
		'\x94', '\x95', '\a', 'Q', '\x2', '\x2', '\x95', '\x96', '\x3', '\x2', 
		'\x2', '\x2', '\x96', '\x97', '\a', '/', '\x2', '\x2', '\x97', '\x98', 
		'\x5', '\x11', '\t', '\x2', '\x98', '\x99', '\a', '/', '\x2', '\x2', '\x99', 
		'\x9A', '\x5', '\x11', '\t', '\x2', '\x9A', '\x9B', '\a', '=', '\x2', 
		'\x2', '\x9B', '&', '\x3', '\x2', '\x2', '\x2', '\x9C', '\xA0', '\a', 
		'$', '\x2', '\x2', '\x9D', '\x9F', '\x5', '\x13', '\n', '\x2', '\x9E', 
		'\x9D', '\x3', '\x2', '\x2', '\x2', '\x9F', '\xA2', '\x3', '\x2', '\x2', 
		'\x2', '\xA0', '\x9E', '\x3', '\x2', '\x2', '\x2', '\xA0', '\xA1', '\x3', 
		'\x2', '\x2', '\x2', '\xA1', '\xA3', '\x3', '\x2', '\x2', '\x2', '\xA2', 
		'\xA0', '\x3', '\x2', '\x2', '\x2', '\xA3', '\xA4', '\a', '$', '\x2', 
		'\x2', '\xA4', '(', '\x3', '\x2', '\x2', '\x2', '\xA5', '\xA9', '\x5', 
		'\x15', '\v', '\x2', '\xA6', '\xA8', '\x5', '\x15', '\v', '\x2', '\xA7', 
		'\xA6', '\x3', '\x2', '\x2', '\x2', '\xA8', '\xAB', '\x3', '\x2', '\x2', 
		'\x2', '\xA9', '\xA7', '\x3', '\x2', '\x2', '\x2', '\xA9', '\xAA', '\x3', 
		'\x2', '\x2', '\x2', '\xAA', '*', '\x3', '\x2', '\x2', '\x2', '\xAB', 
		'\xA9', '\x3', '\x2', '\x2', '\x2', '\xAC', '\xAD', '\a', '&', '\x2', 
		'\x2', '\xAD', ',', '\x3', '\x2', '\x2', '\x2', '\xAE', '\xB0', '\t', 
		'\x5', '\x2', '\x2', '\xAF', '\xAE', '\x3', '\x2', '\x2', '\x2', '\xB0', 
		'\xB1', '\x3', '\x2', '\x2', '\x2', '\xB1', '\xAF', '\x3', '\x2', '\x2', 
		'\x2', '\xB1', '\xB2', '\x3', '\x2', '\x2', '\x2', '\xB2', '\xB3', '\x3', 
		'\x2', '\x2', '\x2', '\xB3', '\xB4', '\b', '\x17', '\x2', '\x2', '\xB4', 
		'.', '\x3', '\x2', '\x2', '\x2', '\xB5', '\xB7', '\t', '\x6', '\x2', '\x2', 
		'\xB6', '\xB5', '\x3', '\x2', '\x2', '\x2', '\xB7', '\xB8', '\x3', '\x2', 
		'\x2', '\x2', '\xB8', '\xB6', '\x3', '\x2', '\x2', '\x2', '\xB8', '\xB9', 
		'\x3', '\x2', '\x2', '\x2', '\xB9', '\xBA', '\x3', '\x2', '\x2', '\x2', 
		'\xBA', '\xBB', '\b', '\x18', '\x2', '\x2', '\xBB', '\x30', '\x3', '\x2', 
		'\x2', '\x2', '\xBC', '\xBD', '\a', '\x31', '\x2', '\x2', '\xBD', '\xBE', 
		'\a', ',', '\x2', '\x2', '\xBE', '\xC2', '\x3', '\x2', '\x2', '\x2', '\xBF', 
		'\xC1', '\v', '\x2', '\x2', '\x2', '\xC0', '\xBF', '\x3', '\x2', '\x2', 
		'\x2', '\xC1', '\xC4', '\x3', '\x2', '\x2', '\x2', '\xC2', '\xC3', '\x3', 
		'\x2', '\x2', '\x2', '\xC2', '\xC0', '\x3', '\x2', '\x2', '\x2', '\xC3', 
		'\xC5', '\x3', '\x2', '\x2', '\x2', '\xC4', '\xC2', '\x3', '\x2', '\x2', 
		'\x2', '\xC5', '\xC6', '\a', ',', '\x2', '\x2', '\xC6', '\xC7', '\a', 
		'\x31', '\x2', '\x2', '\xC7', '\xC8', '\x3', '\x2', '\x2', '\x2', '\xC8', 
		'\xC9', '\b', '\x19', '\x2', '\x2', '\xC9', '\x32', '\x3', '\x2', '\x2', 
		'\x2', '\t', '\x2', '\x45', '\xA0', '\xA9', '\xB1', '\xB8', '\xC2', '\x3', 
		'\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace STEP
